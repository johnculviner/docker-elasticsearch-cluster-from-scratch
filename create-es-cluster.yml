- name: provision an elastic search cluster
  hosts: elastic-cluster
  tasks:

  #set up the config folder per our volume mounts below
  - file: path=/opt/data/elasticsearch/config state=directory
  - template: src=config/elasticsearch.yml dest=/opt/data/elasticsearch/config/elasticsearch.yml
  - copy: src=config/logging.yml dest=/opt/data/elasticsearch/config/logging.yml

  - name: create a place for data to live on the host (better perf, persistant data over ephemeral container life based data)
    file: path=/opt/data/elasticsearch/data state=directory

  - name: install docker-py as required for ansible
    sudo: yes
    pip: name=docker-py

  - name: create and start the elasticsearch containers
    docker:
      image: johnculviner/docker-simple-elasticsearch-cluster
      name: elasticsearch
      state: reloaded
      restart_policy: always
      ports:
        - "9200:9200"
        - "9300:9300"
      volumes:
        - /opt/data/elasticsearch/config:/usr/share/elasticsearch/config
        - /opt/data/elasticsearch/data:/usr/share/elasticsearch/data

  - name: install httplib2 to do our app up checks
    sudo: yes
    pip: name=httplib2

  - name: Waiting for ElasticSearch app port to spin up
    wait_for: host={{ansible_host}} port=9200

  - name: Check cluster node count
    uri: url="http://{{ansible_host}}:9200/_cluster/health" return_content=yes
    register: es_check_response

  - name: Fail cluster node count is wrong
    fail: msg="Cluster node count of {{es_check_response.json.number_of_nodes}} vs {{groups['elastic-cluster'].__len__()}} expected"
    when: es_check_response.json.number_of_nodes != groups['elastic-cluster'].__len__()

  - name: create and start kibana container - one per for redundancy
    docker:
      name: kibana
      image: kibana
      state: reloaded
      restart_policy: always
      ports:
        - "5601:5601"
      env:
        ELASTICSEARCH_URL: http://{{ansible_host}}:9200